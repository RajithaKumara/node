language: android
android:
  components:
    - tools
    - platform-tools
    - tools
    - emulator
    - build-tools-25.0.1
    - android-25
    # - android-22
    - addon-google_apis-google-25
    - extra
    - sys-img-armeabi-v7a-google_apis-25

env:
  global:
    - REPO_NAME="node"
    - ARTIFACTS_ROOT_DIR="node_artifacts_dir"
    - ARTIFACTS_DIR=$ARTIFACTS_ROOT_DIR/$REPO_NAME/$TRAVIS_BRANCH/$TRAVIS_JOB_NUMBER

notifications:
  email:
    on_success: always

before_install:
  # - curl https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip -o ndk.zip
  # - unzip -qq ndk.zip -d $HOME
  # - export ANDROID_NDK_HOME=$HOME/android-ndk-r18b
  - |
    case $ARCH in
      arm)
        export TARGET_ARCH="arm"
        ;;
      x86)
        export TARGET_ARCH="x86"
        ;;
      x86_64)
        export TARGET_ARCH="x86_64"
        ;;
      *)
        export TARGET_ARCH="arm64"
        ;;
    esac

install:
  - printenv
  - emulator -list-avds
  # - source ./android-configure $ANDROID_NDK_HOME $TARGET_ARCH
  - cd ../
  - pwd
  - ls
  - curl https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip -o ndk.zip
  - zip -r -qq node.zip node
  - ls
  - mv node.zip ../
  - mv ndk.zip ../
  - ls
  - cd ../
  - export SD_CARD_PATH=$PWD
  - ls
  - df -h
  # - make V= -j $(getconf _NPROCESSORS_ONLN)

before_script:
  - android list target
  # - avdmanager create avd -f -n test -k "system-images;android-25;google_apis;armeabi-v7a" -c $SD_CARD_PATH/
  - echo no | android create avd --force -n test -t android-25 --abi google_apis/armeabi-v7a
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb devices
  - adb shell input keyevent 82 &

script: skip

# before_deploy:
#   - mkdir -p $ARTIFACTS_DIR
#   - cp -r out/Release/lib.target $ARTIFACTS_DIR

# deploy:
#   provider: s3
#   access_key_id: $AWS_ACCESS_KEY
#   secret_access_key: $AWS_SECRET_KEY
#   bucket: $S3_Bucket
#   skip_cleanup: true
#   local_dir: $ARTIFACTS_ROOT_DIR
#   on:
#     all_branches: true
